# For every commit or tag that is pushed, but image from it and push this to docker hub

name: CI/CD

on:
  pull_request:
    branches: [main]
  release:
    types: [published]
  push:
    branches: [main]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  deploy:
    name: Push Docker image to GitHub Packages
    runs-on: ubuntu-latest
    env:
      USERNAME: ${{ secrets.RELEASE_USERNAME }}
      TOKEN: ${{ secrets.RELEASE_TOKEN }}
    steps:
      -
        name: Checkout code
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          tags: isanteplus/docker-isanteplus-server:ci
          load: true
          build-args: |
            USERNAME=${{ github.actor }}
            TOKEN=${{ secrets.GITHUB_TOKEN }}
     
      - name: Pull containers
        run: docker-compose pull qa chrome mysql
      
      - name: Cache containers
        uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true

      - name: Start core containers
        run: docker-compose up -d isanteplus mysql
      
      - name: Sleep for 700 seconds
        run: sleep 700
        shell: bash

      - name: Run iSantePlus QA Framework (https://github.com/IsantePlus/isanteplus-qaframework)
        run: docker-compose -f docker-compose.ports.yml up --exit-code-from qa qa

      - name: Run Basic API Tests (https://www.getpostman.com/collections/22647ce67595a103f9c1)
        env:
          POSTMAN_COLLECTION: https://www.getpostman.com/collections/22647ce67595a103f9c1

        run: docker-compose up --exit-code-from newman newman

      - name: Run basic API tests

      - name: Run basic UI tests


      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Publish Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          build-args: |
            USERNAME=${{ github.actor }}
            TOKEN=${{ secrets.GITHUB_TOKEN }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
